apiVersion: v1
kind: Template
metadata:
  name: hazelcast
  annotations:
    description: "Openshift deployment template for Hazelcast"
    tags: "hazelcast, imdg, datagrid, inmemory, kvstore, nosql, java"
    iconClass: "icon-java"
labels:
  template: hazelcast-openshift-template

parameters:
  - name: HAZELCAST_IMAGE
    description: "Defines the location of Hazelcast image"
    value: hazelcast/hazelcast:3.12
    required: true
  - name: SERVICE_NAME
    description: "Defines the service name of the POD to lookup of Kubernetes"
    value: hazelcast-service
    required: true
  - name: NAMESPACE
    description: "Defines the namespace (project name) of the application POD of Kubernetes"
    required: false
  - name: HAZELCAST_REPLICAS
    description: "Number of Hazelcast members"
    value: "3"
    required: true
  - name: MANAGEMENT_CENTER_IMAGE
    description: "Defines the location of Hazelcast Management Center image"
    value: hazelcast/management-center
    required: true
  - name: MANAGEMENT_CENTER_SERVICE_NAME
    description: "Defines the service name of Management Center"
    value: management-center-service
    required: true

objects:
- apiVersion: v1
  kind: ConfigMap
  metadata:
    name: hazelcast-configuration
  data:
    hazelcast.xml: |-
      <?xml version="1.0" encoding="UTF-8"?>
      <hazelcast xsi:schemaLocation="http://www.hazelcast.com/schema/config hazelcast-config-3.10.xsd"
                     xmlns="http://www.hazelcast.com/schema/config"
                     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
        <network>
          <join>
            <multicast enabled="false"/>
            <kubernetes enabled="true"/>
          </join>
        </network>
        <management-center enabled="true">http://management-center-service.${namespace}.svc:8080/hazelcast-mancenter</management-center>
      </hazelcast>

- apiVersion: apps/v1
  kind: StatefulSet
  metadata:
    name: hazelcast
    labels:
      app: hazelcast
  spec:
    replicas: ${HAZELCAST_REPLICAS}
    selector:
      matchLabels:
        app: hazelcast
    template:
      metadata:
        labels:
          app: hazelcast
          role: hazelcast
      spec:
        containers:
          - name: hazelcast-openshift
            image: ${HAZELCAST_IMAGE}
            ports:
              - name: hazelcast
                containerPort: 5701
            livenessProbe:
              httpGet:
                path: /hazelcast/health/node-state
                port: 5701
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 5
              successThreshold: 1
              failureThreshold: 3
            readinessProbe:
              httpGet:
                path: /hazelcast/health/node-state
                port: 5701
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 1
              successThreshold: 1
              failureThreshold: 1
            volumeMounts:
              - name: hazelcast-storage
                mountPath: /data/hazelcast
            env:
              - name: HAZELCAST_KUBERNETES_SERVICE_DNS
                value: ${SERVICE_NAME}.${NAMESPACE}.svc.cluster.local
              - name: JAVA_OPTS
                value: "-Dhazelcast.rest.enabled=true -Dhazelcast.config=/data/hazelcast/hazelcast.xml -Dnamespace=${NAMESPACE}"
        volumes:
          - name: hazelcast-storage
            configMap:
              name: hazelcast-configuration

- apiVersion: v1
  kind: Service
  metadata:
    name: ${SERVICE_NAME}
  spec:
    type: ClusterIP
    clusterIP: None
    selector:
      app: hazelcast
    ports:
      - protocol: TCP
        port: 5701

- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: management-center-volume
  spec:
    accessModes:
      - ReadWriteOnce
    resources:
      requests:
        storage: 1Gi

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    name: management-center
    labels:
      app: hazelcast
  spec:
    replicas: 1
    selector:
      matchLabels:
        app: hazelcast
        role: mancenter
    template:
      metadata:
        labels:
          app: hazelcast
          role: mancenter
      spec:
        containers:
          - name: management-center
            image: ${MANAGEMENT_CENTER_IMAGE}
            resources:
              limits:
                memory: 1Gi
            ports:
              - name: mancenter
                containerPort: 8080
            livenessProbe:
              httpGet:
                path: /hazelcast-mancenter
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 15
              successThreshold: 1
              failureThreshold: 10
            readinessProbe:
              httpGet:
                path: /hazelcast-mancenter
                port: 8080
              initialDelaySeconds: 30
              periodSeconds: 10
              timeoutSeconds: 15
              successThreshold: 1
              failureThreshold: 10
            volumeMounts:
              - name: mancenter-storage
                mountPath: /data
        volumes:
          - name: mancenter-storage
            persistentVolumeClaim:
              claimName: management-center-volume

- apiVersion: v1
  kind: Service
  metadata:
    name: ${MANAGEMENT_CENTER_SERVICE_NAME}
  spec:
    type: ClusterIP
    clusterIP: None
    selector:
      app: hazelcast
      role: mancenter
    ports:
      - protocol: TCP
        port: 8080